name: Deploy to Pantheon Multi-Dev

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    types: [opened,synchronize,reopened,closed]
    branches-ignore:
      - master
      - main

jobs:
  calculate_target_env:
    name: Calculate Target Environment
    runs-on: ubuntu-latest
    outputs:
      target_env: ${{ steps.env_name.outputs.target_env }}
    steps:
    - name: Calculate environment name
      id: env_name
      run: |
        if [[ "${{ github.event.pull_request.base.ref }}" == "develop" && "${{ github.event.action }}" == "closed" && "${{ github.event.pull_request.merged }}" == "true" ]]; then
          # For merged PRs to develop branch, use rc-YEAR-WEEK format
          YEAR=$(date +%Y)
          WEEK=$(date +%V)
          TARGET_ENV="rc-${YEAR}-${WEEK}"
        else
          # For all other cases (open PRs, PRs to other branches), use pr-NUMBER format
          TARGET_ENV="pr-${{ github.event.pull_request.number }}"
        fi
        echo "target_env=${TARGET_ENV}" >> $GITHUB_OUTPUT
        echo "Calculated target environment: ${TARGET_ENV}"

  run_static_tests:
    name: Run Static Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Update composer in working docker container
      run: |
        sudo composer self-update
        composer install --prefer-dist --no-progress --no-interaction --optimize-autoloader

    - name: Run code linting
      run: |
        composer lint

    - name: Run code-sniffer
      run: |
        echo "FUTURE: Running PHP Code Sniffer..."

  deploy_multidev:
    name: Deploy to Multidev
    needs: [run_static_tests, calculate_target_env]
    uses: Square360/shared-pantheon-workflows/.github/workflows/reusable-deploy-multidev.yml@main
    with:
      pantheon_site: ${{ vars.PANTHEON_SITE }}
      target_env: ${{ needs.calculate_target_env.outputs.target_env }}
    secrets:
      PANTHEON_SSH_KEY: ${{ secrets.PANTHEON_SSH_KEY }}
      PANTHEON_MACHINE_TOKEN: ${{ secrets.PANTHEON_MACHINE_TOKEN }}